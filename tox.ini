# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# To use a PEP 517 build-backend you are required to configure tox to use an isolated_build:
# https://tox.readthedocs.io/en/latest/example/package.html
isolated_build = True

# These environments are run in order if you just use `tox`:
envlist =
    # code linters/stylers
    lint
    pyroma
    flake8
    mypy
    # documentation linters/checkers
    docstr-coverage
    # the actual tests
    py

[testenv]
# Runs on the "tests" directory by default, or passes the positional
# arguments from `tox -e py <posargs_1> ... <posargs_n>
commands =
    coverage run -p -m pytest --durations=20 {posargs:tests}
    coverage combine
    coverage xml
extras =
    # See the [options.extras_require] entry in setup.cfg for "tests"
    tests

[testenv:dev]
deps =
    # See the [options.extras_require] entry in setup.cfg for "dev"
    .[dev]

[testenv:lint]
deps =
    black[jupyter]
    isort
    nbqa
skip_install = true
commands =
    black .
    isort .
    nbqa isort .
description = Run linters.

[testenv:flake8]
skip_install = true
deps =
    darglint
    flake8
    flake8-black
    flake8-bandit
    flake8-bugbear
    flake8-colors
    flake8-docstrings
    flake8-isort
    flake8-print
    pep8-naming
    pydocstyle
commands =
    flake8 src/ tests/
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming). See https://cthoyt.com/2020/04/25/how-to-code-with-me-flake8.html for more information.

[testenv:pyroma]
deps =
    pygments
    pyroma
skip_install = true
commands = pyroma --min=10 .
description = Run the pyroma tool to check the package friendliness of the project.

[testenv:mypy]
deps = 
    mypy
    pydantic
skip_install = true
commands = mypy --install-types --non-interactive --ignore-missing-imports src/
description = Run the mypy tool to check static typing on the project.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/ tests/ --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage

####################
# Deployment tools #
####################

[testenv:bumpversion]
commands = bump2version {posargs}
skip_install = true
passenv = HOME
deps =
    bump2version

[testenv:build]
skip_install = true
deps =
    wheel
    build
    setuptools
commands =
    python -m build --sdist --wheel --no-isolation